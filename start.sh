#!/bin/bash
# Script melhorado para iniciar a aplica√ß√£o Advogada Parceira

# Encontrar o Python instalado no sistema
if command -v python3 &> /dev/null; then
    PYTHON_CMD="python3"
elif command -v python &> /dev/null; then
    PYTHON_CMD="python"
else
    echo "‚ùå Python n√£o encontrado! Por favor, instale o Python 3.9 ou superior."
    exit 1
fi

# Imprime a vers√£o do Python que ser√° usada
echo "üêç Usando Python: $($PYTHON_CMD --version)"

# Verifica se o ambiente virtual existe
if [ ! -d "venv" ]; then
    echo "üîß Criando ambiente virtual..."
    $PYTHON_CMD -m venv venv
    if [ $? -ne 0 ]; then
        echo "‚ùå Falha ao criar o ambiente virtual. Verifique se o m√≥dulo venv est√° instalado."
        exit 1
    fi
fi

# Determina o caminho do ativador do ambiente virtual
if [ -f "venv/bin/activate" ]; then
    ACTIVATE_SCRIPT="venv/bin/activate"
elif [ -f "venv/Scripts/activate" ]; then
    ACTIVATE_SCRIPT="venv/Scripts/activate"
else
    echo "‚ùå N√£o foi poss√≠vel encontrar o script de ativa√ß√£o do ambiente virtual!"
    exit 1
fi

echo "üîÑ Ativando ambiente virtual: $ACTIVATE_SCRIPT"
source $ACTIVATE_SCRIPT

# Agora, com o ambiente virtual ativado, verifica os comandos
if ! command -v pip &> /dev/null; then
    echo "‚ùå pip n√£o encontrado no ambiente virtual! Algo deu errado na cria√ß√£o do ambiente."
    exit 1
fi

echo "üîß Instalando depend√™ncias..."
pip install -r requirements.txt

# Instala o validador de email (depend√™ncia espec√≠fica identificada)
echo "üîß Instalando o validador de email..."
pip install "pydantic[email]"

# Configura o banco de dados SQLite
echo "üóÉÔ∏è Configurando o banco de dados SQLite..."
python scripts/init_db_sqlite.py

# Exporta vari√°vel de ambiente para usar SQLite
export USE_SQLITE=True

# Verifica se uvicorn est√° instalado
if ! command -v uvicorn &> /dev/null; then
    echo "üîß Instalando uvicorn..."
    pip install uvicorn
fi

# Inicia a aplica√ß√£o
echo "üöÄ Iniciando a aplica√ß√£o com SQLite..."
cd app || cd backend/app
uvicorn main:app --host 0.0.0.0 --port 8000 --reload

# Se chegou aqui, algo deu errado com o uvicorn
if [ $? -ne 0 ]; then
    echo "‚ùå Falha ao iniciar o servidor uvicorn. Tentando m√©todo alternativo..."
    python -m uvicorn main:app --host 0.0.0.0 --port 8000 --reload
fi

# O script n√£o deve chegar aqui normalmente, pois o uvicorn mant√©m o processo em execu√ß√£o
echo "‚ö†Ô∏è O servidor foi encerrado."

# Desativa o ambiente virtual ao sair
deactivate